[{"C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\index.js":"1","C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\serviceWorker.js":"2","C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\App.js":"3","C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\Components\\Animations\\Animations.js":"4","C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\Components\\Environment\\index.js":"5","C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\Components\\BlueSpheres\\index.js":"6","C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\Components\\WhiteSpheres\\index.js":"7","C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\Components\\Lights\\index.js":"8","C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\Components\\BottomForeground\\index.js":"9","C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\Components\\WhiteSpheres\\Sphere.js":"10","C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\Components\\BlueSpheres\\Sphere.js":"11"},{"size":445,"mtime":1618753611352,"results":"12","hashOfConfig":"13"},{"size":5757,"mtime":1618753611353,"results":"14","hashOfConfig":"13"},{"size":10484,"mtime":1618753611342,"results":"15","hashOfConfig":"13"},{"size":15614,"mtime":1618753611343,"results":"16","hashOfConfig":"13"},{"size":390,"mtime":1618753611348,"results":"17","hashOfConfig":"13"},{"size":650,"mtime":1618753611344,"results":"18","hashOfConfig":"13"},{"size":421,"mtime":1618753611352,"results":"19","hashOfConfig":"13"},{"size":540,"mtime":1618753611349,"results":"20","hashOfConfig":"13"},{"size":1167,"mtime":1618753611345,"results":"21","hashOfConfig":"13"},{"size":1532,"mtime":1618753611351,"results":"22","hashOfConfig":"13"},{"size":1662,"mtime":1618753611344,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"568dzx",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\index.js",[],"C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\serviceWorker.js",[],["54"],"C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\App.js",[],"C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\Components\\Animations\\Animations.js",[],"C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\Components\\Environment\\index.js",["55"],"import React from \"react\";\nimport { BackSide } from \"three\";\n\n\nexport default () => {\n  return (\n    <mesh>\n \n      <sphereBufferGeometry args={[10,10, 10]} attach=\"geometry\" />\n      <meshStandardMaterial\n        color={0x20232a}\n        attach=\"material\"\n        side={BackSide}\n        metalness={0.4}\n      />\n    </mesh>\n  );\n};\n","C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\Components\\BlueSpheres\\index.js",["56"],"import React, { useRef } from \"react\";\nimport { map } from \"lodash\";\nimport { useFrame } from \"@react-three/fiber\";\n\nimport Sphere from \"./Sphere\";\n\nexport default () => {\n  const group = useRef();\n\n\n  useFrame(() => {\n    group.current.rotation.y += 0.0003;\n    \n  });\n\n  const nodesSpheres = map(new Array(1000), (el, i) => {\n    return <Sphere key={i} />;\n  }  );\n\n  const nodesBackwardSpheres = map(new Array(1000), (el, i) => {\n    return <Sphere key={i} />;\n  });\n  \n\nreturn (<mesh><group ref={group}>{nodesSpheres}</group> <group ref={group}>{nodesBackwardSpheres}</group></mesh>);\n\n\n\n};\n\n\n","C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\Components\\WhiteSpheres\\index.js",["57"],"import React, { useRef } from \"react\";\nimport { map } from \"lodash\";\nimport { useFrame } from \"@react-three/fiber\";\n\nimport Sphere from \"./Sphere\";\n\nexport default () => {\n  const group = useRef();\n\n  useFrame(() => {\n    group.current.rotation.y -= 0.001;\n  });\n\n  const nodesSpheres = map(new Array(500), (el, i) => {\n    return <Sphere key={i} />;\n  });\n\n  return <group ref={group}>{nodesSpheres}</group>;\n};\n","C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\Components\\Lights\\index.js",["58"],"import React from \"react\";\n\n\nexport default () => {\n\n\n  return (\n    <group>\n      <pointLight intensity={1.12} position={[0, 0, 10]} />\n\n      <directionalLight\n        castShadow={true}\n        intensity={0.1}\n        position={[-10, 10, 40]}\n      />\n      <directionalLight\n        castShadow={true}\n        intensity={0.1}\n        position={[10, 10, 40]}\n      />\n\n      <directionalLight\n        castShadow={true}\n        intensity={0.1}\n        position={[-10, -10, 40]}\n      />\n      <directionalLight\n        castShadow={true}\n        intensity={0.1}\n        position={[10, -10, 40]}\n      />\n    </group>\n  );\n};\n","C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\Components\\BottomForeground\\index.js",["59"],"import React from \"react\";\n\nimport MountainForeground from \"./../../Assets/images/mountains-bottom-foreground.png\";\n\nexport default (props) => {\n  return (\n    <div className=\"mountainForeground\">\n      <img alt=\"pic of Shawn\" className=\"imgOnly\" src={MountainForeground} />\n\n      <style jsx=\"\">{`\n        .mountainForeground {\n          z-index: 10;\n\n          opacity: 0.9;\n          transition: all 0.6s;\n          filter: brightness 0.7;\n        }\n\n        .imgOnly {\n          width: 100vw;\n          filter: hue-rotate(30deg) grayscale(66%);\n        }\n\n        // .imgOnly:hover {\n\n        //     cursor: url(\"data:image/svg+xml;utf8,\n        //     <svg xmlns=\"http://www.w3.org/2000/svg\"  width=\"40\" height=\"48\" viewport=\"0 0 100 100\"\n        //     style=\"fill:black;font-size:24px;\"><text y=\"50%\">ðŸ’š</text></svg>\")\n        //               16 0,\n        //             auto; /*emojicursor.app*/\n        // }\n      `}</style>\n    </div>\n  );\n};\n","C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\Components\\WhiteSpheres\\Sphere.js",["60"],"import React, {\n  useMemo,\n  useRef,\n  useState,\n  useEffect,\n  useCallback\n} from \"react\";\nimport { random } from \"lodash\";\nimport { useFrame } from \"@react-three/fiber\";\n\nexport default () => {\n  const mesh = useRef();\n  const time = useRef(0);\n\n\n  const [isActive, setIsActive] = useState(false);\n\n  const isActiveRef = useRef(isActive);\n\n  // position\n  const position = useMemo(() => {\n    return [random(-5, 5, true), random(-10, 10, true), random(-5, 5, true)];\n  }, []);\n\n  // random time mod factor\n  const timeMod = useMemo(() => random(0.1, 4, true), []);\n\n  // color\n  let color = 0xf8f8ff;\n\n\n  //useEffect of the activeState\n  useEffect(() => {\n    isActiveRef.current = isActive;\n  }, [isActive]);\n\n  // raf loop\n  useFrame(() => {\n    mesh.current.rotation.y += 0.01 * timeMod;\n    if (isActiveRef.current) {\n      time.current += 0.03;\n      mesh.current.position.y = position[1] + Math.sin(time.current) * 0.4;\n    }\n  });\n\n  const onClick = useCallback(\n    e => {\n      e.stopPropagation();\n      setIsActive(v => !v);\n    },\n    [setIsActive]\n  );\n\n  return (\n    <mesh\n      ref={mesh}\n      position={position}\n      onClick={e => onClick(e)}\n  \n    >\n\n{/* Below in args, the first argument is the size of the spheres\nthe second argument is  */}\n      <sphereBufferGeometry attach=\"geometry\" args={[0.0047, 5, 0.29]} />\n\n      <meshStandardMaterial\n        attach=\"material\"\n        color={color}\n        roughness={0.6}\n        metalness={0.1}\n      />\n    </mesh>\n  );\n};","C:\\Users\\Elysium\\Documents\\GitHub\\portfolio-reloaded\\src\\Components\\BlueSpheres\\Sphere.js",["61"],"import React, {\n  useMemo,\n  useRef,\n  useState,\n  useEffect\n} from \"react\";\nimport { random } from \"lodash\";\nimport { useFrame } from \"@react-three/fiber\";\n\nexport default () => {\n\n  //mutable objects can be changed after they are created\n  //the useRef method is used to keep track everytime something is rendered\n  //it is generally used for counter variables, or variables that we want to keep\n  //track of outside the scope of the normal rendering of React\n  const mesh = useRef();\n  const time = useRef(0);\n\n\n  const [isActive] = useState(false);\n\n  const isActiveRef = useRef(isActive);\n\n  // position\n  const position = useMemo(() => {\n    return [random(-5, 50, true), random(-10, 10, true), random(-5, 5, true)];\n  }, []);\n\n  // random time mod factor\n  const timeMod = useMemo(() => random(0.1, 4, true), []);\n\n  // color\n  let color = 0x61dafb;\n\n  //useEffect of the activeState\n  useEffect(() => {\n    isActiveRef.current = isActive;\n  }, [isActive]);\n\n  // raf loop\n  //this is what causes motion of the spheres\n  useFrame(() => {\n    mesh.current.rotation.y += 0.01 * timeMod;\n    if (isActiveRef.current) {\n      time.current += 0.03;\n      mesh.current.position.y = position[1] + Math.sin(time.current) * 0.4;\n    }\n  });\n\n\n\n\n\n  return (\n    <mesh\n      ref={mesh}\n      position={position}\n\n    >\n\n      {/* Below in args, the first argument is the size of the spheres\nthe second argument is  */}\n      <sphereBufferGeometry attach=\"geometry\" args={[0.00647, 0.00005, 7]} />\n\n      <meshStandardMaterial\n        attach=\"material\"\n        color={color}\n        roughness={0.6}\n        metalness={0.1}\n      />\n    </mesh>\n  );\n};",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":4,"column":16,"nodeType":"66","messageId":"67","endLine":16,"endColumn":2},{"ruleId":"64","severity":1,"message":"65","line":7,"column":16,"nodeType":"66","messageId":"67","endLine":28,"endColumn":2},{"ruleId":"64","severity":1,"message":"65","line":7,"column":16,"nodeType":"66","messageId":"67","endLine":19,"endColumn":2},{"ruleId":"64","severity":1,"message":"65","line":3,"column":16,"nodeType":"66","messageId":"67","endLine":15,"endColumn":2},{"ruleId":"64","severity":1,"message":"65","line":6,"column":16,"nodeType":"66","messageId":"67","endLine":36,"endColumn":2},{"ruleId":"64","severity":1,"message":"65","line":5,"column":16,"nodeType":"66","messageId":"67","endLine":55,"endColumn":2},{"ruleId":"64","severity":1,"message":"65","line":5,"column":16,"nodeType":"66","messageId":"67","endLine":52,"endColumn":2},"jsx-a11y/accessible-emoji",[],"react/display-name","Component definition is missing display name","ArrowFunctionExpression","noDisplayName"]